services:
  web:
    container_name: web
    build:
      context: ./frontend
      target: production
    restart: unless-stopped
    depends_on:
      - api
    networks:
      - app_network
    env_file:
      - ./frontend/.env
  api:
    container_name: api
    build:
      context: ./backend
      target: production
    restart: unless-stopped

    networks:
      - app_network
    env_file:
      - ./backend/.env

  caddy:
    container_name: caddy
    image: caddy/caddy:latest
    ports:
      - 80:80
      - 443:443
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app_network
    depends_on:
      - api
      - web

volumes:
  caddy_data:
  caddy_config:

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  app_network:
